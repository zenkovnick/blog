<?php

/**
 * BaseUsers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $role_id
 * @property string $login
 * @property string $pass
 * @property string $email
 * @property Roles $Roles
 * 
 * @method integer getRoleId()  Returns the current record's "role_id" value
 * @method string  getLogin()   Returns the current record's "login" value
 * @method string  getPass()    Returns the current record's "pass" value
 * @method string  getEmail()   Returns the current record's "email" value
 * @method Roles   getRoles()   Returns the current record's "Roles" value
 * @method Users   setRoleId()  Sets the current record's "role_id" value
 * @method Users   setLogin()   Sets the current record's "login" value
 * @method Users   setPass()    Sets the current record's "pass" value
 * @method Users   setEmail()   Sets the current record's "email" value
 * @method Users   setRoles()   Sets the current record's "Roles" value
 * 
 * @package    blog
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users');
        $this->hasColumn('role_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('login', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('pass', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Roles', array(
             'local' => 'role_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}